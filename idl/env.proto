// idl/hello/hello.proto
syntax = "proto3";

package env;

option go_package = "env";

import "api.proto";
//import "base.proto";
//import "google/protobuf/struct.proto";

message EnvQuery {
  int64 id = 1[(api.query)="id",(api.body)="id"];
  string name = 2[(api.query)="name",(api.body)="name"];
  string description = 3[(api.query)="description",(api.body)="description"];
  uint64 page = 111;
  uint64 pageSize = 112;
}

message EnvResp {
  int64 id = 1[(api.query)="id",(api.body)="id"];
  string name = 2[(api.query)="name",(api.body)="name"];
  string description = 3[(api.query)="description",(api.body)="description"];
  //  string Token = 6[(api.query)="token",(api.body)="token"];
}

message EnvAllResp {
  int64 id = 1[(api.query)="id",(api.body)="id"];
  string name = 2[(api.query)="name",(api.body)="name"];
}

message EnvGetByIdResp {
  int64 id = 1[(api.query)="id"];
  string name = 2[(api.query)="name",(api.body)="name"];
  string description = 3[(api.query)="description",(api.body)="description"];
}


message PostEnvReq {
  string name = 2[(api.query)="name",(api.body)="name"];
  string description = 3[(api.query)="description",(api.body)="description"];
}

message PutEnvReq {
  optional string name = 2[(api.query)="name",(api.body)="name,omitempty"];
  optional string description = 3[(api.query)="description",(api.body)="description,omitempty"];
}


service EnvService {
  rpc GetEnvAll(EnvQuery) returns(EnvAllResp) {
    option (api.get) = "/api/v1/jobor/envs";
  }
  rpc GetEnvById(EnvQuery) returns(EnvResp) {
    option (api.get) = "/api/v1/jobor/env/:id";
  }
  rpc GetEnv(EnvQuery) returns(EnvResp) {
    option (api.get) = "/api/v1/jobor/env";
  }
  rpc PostEnv(PostEnvReq) returns(EnvResp) {
    option (api.post) = "/api/v1/jobor/env";
  }
  rpc PutEnv(PutEnvReq) returns(EnvResp) {
    option (api.put) = "/api/v1/jobor/env/:id";
  }
  rpc DeleteEnv(EnvQuery) returns(EnvResp) {
    option (api.delete) = "/api/v1/jobor/env/:id";
  }
}
